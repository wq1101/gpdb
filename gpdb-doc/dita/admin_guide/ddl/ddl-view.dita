<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_i3c_qwy_sp">
  <title id="im140342">Creating and Managing Views</title>
  <body>
    <p>Views enable you to save frequently used or complex queries, then access them in a
        <codeph>SELECT</codeph> statement as if they were a table. A view is not physically
      materialized on disk: the query runs as a subquery when you access the view.</p>
    <p>These topics describe various aspects of creating and managing views:</p>
    <ul id="ul_qv2_1jt_jlb">
      <li>
        <xref href="ddl-view-best-practices.xml"/> outlines best practices when creating views.</li>
      <li>
        <xref href="ddl-view-find-depend.xml"/> contains examples of listing view information and
        determining what views depend on a certain object. </li>
      <li><xref href="ddl-view-storage.xml"/> describes the mechanics behind view dependencies.</li>
    </ul>
  </body>
  <topic id="topic101" xml:lang="en">
    <title>Creating Views</title>
    <body>
      <p>The <codeph>CREATE VIEW </codeph>command defines a view of a query. For example:</p>
      <p>
        <codeblock>CREATE VIEW comedies AS SELECT * FROM films WHERE kind = 'comedy';
</codeblock>
      </p>
      <p>Views ignore <codeph>ORDER BY</codeph> and <codeph>SORT</codeph> operations stored in the
        view.</p>
    </body>
  </topic>
  <topic id="topic102" xml:lang="en">
    <title>Dropping Views</title>
    <body>
      <p>The <codeph>DROP VIEW</codeph> command removes a view. For example:</p>
      <p>
        <codeblock>DROP VIEW topten;
</codeblock>
      </p>
      <p>The <codeph>DROP VIEW...CASCADE</codeph> command also removes all dependent objects. As an
        example, if another view depends on the view which is about to be dropped, the other view
        will be dropped as well. Without the <codeph>CASCADE</codeph> option, the <codeph>DROP
          VIEW</codeph> command will fail.</p>
    </body>
  </topic>
</topic>
